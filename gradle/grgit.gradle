/*
 * Copyright Â© 2017-2018  Kynetics  LLC
 *
 *  All rights reserved. This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 */

import org.ajoberstar.grgit.Grgit

/**
 * Functions and tasks to obtain project versions using grgit
 */
buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.ajoberstar:grgit:1.7.+'
    }
}

ext {
    versionFromGit = { prj ->
        def gitversion = "none"
        try {
            File gitDir = new File(prj.projectDir, File.separator + '.git')
            def actualGitDir = '.'
            if (gitDir.isFile()) {
                def gitDirFile = gitDir.text.tokenize(':')
                actualGitDir = gitDir.absolutePath.replace('.git','') + File.separator + gitDirFile[1].trim()
                logger.debug ".git is a file, actual git directory is: " + actualGitDir
            }
            // Open the Git repository in the current directory.
            def git = Grgit.open(dir: actualGitDir)
            gitversion = git.describe() ?: git.head().getAbbreviatedId(7)
        } catch (Exception ex) {
            logger.error(ex.toString())
        }
        return gitversion
    }

    differentVersions = subprojects.collectEntries {
        [versionFromGit(it), it]
    }

    firstVersion = differentVersions.keySet().first()
}


task showVersions {
    group 'uf'
    doLast {
        subprojects.each {
            println it.name + ": Building version " + versionFromGit(it)
        }
    }
}
